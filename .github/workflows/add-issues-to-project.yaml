# foo.

name: Automatically add newly created issues to the backlog project

on:
  issues:
    types:
      - opened

jobs:
  add-new-issues-to-backlog:
    runs-on: ubuntu-latest
    steps:
      - name: Install hub
        run: |
          HUB_ARCH="amd64"
          HUB_VER=$(curl -sL "https://api.github.com/repos/github/hub/releases/latest" |\
            jq -r .tag_name | sed 's/^v//')
          curl -sL \
            "https://github.com/github/hub/releases/download/v${HUB_VER}/hub-linux-${HUB_ARCH}-${HUB_VER}.tgz" |\
          tar xz --strip-components=2 --wildcards '*/bin/hub' && \
          sudo install hub /usr/local/bin

      - name: Install hub extension script
        run: |
          # Clone into a temporary directory to avoid overwriting
          # any existing github directory.
          pushd $(mktemp -d) &>/dev/null
          git clone --single-branch --depth 1 "https://github.com/jamesodhunt-org/.github" && cd .github/scripts
          sudo install hub-util.sh /usr/local/bin
          popd &>/dev/null

      - name: Checkout code to allow hub to communicate with the project
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.JODH_GITHUB_ACTIONS_TOKEN }}

      - name: Add issue to issue backlog
        env:
          DEBUG: true
          HUB_VERBOSE: true
          GITHUB_TOKEN: ${{ secrets.JODH_GITHUB_ACTIONS_TOKEN }}
        run: |
          # FIXME: DEBUG:
          echo "::debug::GITHUB_WORKSPACE"
          echo "$GITHUB_WORKSPACE"

          # FIXME: DEBUG:
          echo "::debug::PWD"
          pwd
          ls -al

          # FIXME: DEBUG:
          echo "::debug::PATH"
          echo $PATH

          echo "::debug::secrets context"
          echo "::debug::${{ toJson(secrets) }}"

          export PATH="/usr/local/bin:$PATH"

          # FIXME: DEBUG:
          echo "::debug::hub"
          command -v hub || true

          # FIXME: DEBUG:
          echo "::debug::hub api user"
          hub api user || true

          # FIXME: DEBUG:
          echo "::debug::hub issues"
          hub issue || true

          # FIXME: DEBUG:
          echo "::debug::hub PRs"
          hub pr list || true

          # FIXME: DEBUG:
          echo "::debug::git details"
          git ls-files -v || true
          git branch || true
          git remote -v || true
          git status || true

          # FIXME: DEBUG:
          echo "::debug::/usr/local/bin:"
          sudo ls -l /usr/local/bin || true

          issue=${{ github.event.issue.number }}
          project_name="top-level-project"
          project_type="org"
          project_column="To do"

          hub-util.sh \
            add-issue \
            "$issue" \
            "$project_name" \
            "$project_type" \
            "$project_column"
